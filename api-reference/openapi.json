{
    "openapi": "3.0.0",
    "info": {
        "description": "REST API for accessing and managing CRM data. Generate API keys from the NEX web UI and use them to authenticate requests.",
        "title": "NEX CRM Developer API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/developers/v1/lists/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record or updates an existing one and ensures it's in the specified list",
                "tags": [
                    "Lists"
                ],
                "summary": "Create or update a list member",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateListMemberRequest"
                            }
                        }
                    },
                    "description": "List member upsert request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created or updated record in the list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateListMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record and adds it to the specified list",
                "tags": [
                    "Lists"
                ],
                "summary": "Add a record to a list",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateListMemberRequest"
                            }
                        }
                    },
                    "description": "List member creation request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created record added to the list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateListMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/lists/{id}/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all records that belong to a specific list with pagination",
                "tags": [
                    "Lists"
                ],
                "summary": "Get records from a specific list",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.ListRecordsRequest"
                            }
                        }
                    },
                    "description": "List records request with pagination options",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "List of records with pagination info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListRecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/lists/{id}/records/{record_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates list-specific attributes for a record that belongs to a list",
                "tags": [
                    "Lists"
                ],
                "summary": "Update a record within a list",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpdateListRecordRequest"
                            }
                        }
                    },
                    "description": "List record update request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated list record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpdateListRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List or record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/objects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all entity definitions (objects) available in the workspace",
                "tags": [
                    "Objects"
                ],
                "summary": "List all objects in the workspace",
                "parameters": [
                    {
                        "description": "Include attribute definitions for each object",
                        "name": "include_attributes",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/objects/{slug}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record or updates an existing one based on a matching attribute",
                "tags": [
                    "Records"
                ],
                "summary": "Create or update a record",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpsertRecordRequest"
                            }
                        }
                    },
                    "description": "Upsert record request with matching attribute and data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created or updated record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpsertRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record for a specific object type with the provided attributes",
                "tags": [
                    "Records"
                ],
                "summary": "Create a new record",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateRecordRequest"
                            }
                        }
                    },
                    "description": "Record attributes",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/objects/{slug}/lists": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all lists associated with a specific object type",
                "tags": [
                    "Lists"
                ],
                "summary": "List all lists for a specific object",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Include attribute definitions for each list",
                        "name": "include_attributes",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lists for the object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/objects/{slug}/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves records (entities) for a specific object type with pagination and optional filtering",
                "tags": [
                    "Records"
                ],
                "summary": "List records for a specific object type",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.ListRecordsRequest"
                            }
                        }
                    },
                    "description": "List records request with pagination and filtering options",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "List of records with pagination info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListRecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/developers/v1/records/{record_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a single record with all its attributes",
                "tags": [
                    "Records"
                ],
                "summary": "Get a specific record by ID",
                "parameters": [
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record details with attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.RecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid record ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates specific attributes of an existing record",
                "tags": [
                    "Records"
                ],
                "summary": "Update an existing record",
                "parameters": [
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpdateRecordRequest"
                            }
                        }
                    },
                    "description": "Attributes to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpdateRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "//localhost:30000/api"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "description": "API key for authentication (format: \"Bearer YOUR_API_KEY\")",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "developer.AttributeDefinitionResponse": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/components/schemas/developer.AttributeOptionsResponse"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "developer.AttributeOptionsResponse": {
                "type": "object",
                "properties": {
                    "is_multi_value": {
                        "type": "boolean"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "is_unique": {
                        "type": "boolean"
                    },
                    "is_whole_number": {
                        "type": "boolean"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.SelectOptionResponse"
                        }
                    },
                    "use_raw_format": {
                        "type": "boolean"
                    }
                }
            },
            "developer.AttributesParam": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": [
                            "all",
                            "primary",
                            "none"
                        ],
                        "description": "Simple string values for common attribute sets"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "custom"
                                ],
                                "description": "Must be 'custom' when using object format"
                            },
                            "slugs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Array of attribute slugs to include",
                                "minItems": 1
                            }
                        },
                        "required": [
                            "mode",
                            "slugs"
                        ],
                        "description": "Object format for custom attribute selection"
                    }
                ],
                "description": "Attributes parameter supports both string values ('all', 'primary', 'none') and object format for custom selection"
            },
            "developer.CreateListMemberRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Optional list-specific attributes",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "parent_id": {
                        "description": "ID of the existing record to add to the list",
                        "type": "string"
                    }
                }
            },
            "developer.CreateListMemberResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "developer.CreateRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                }
            },
            "developer.CreateRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "developer.ListObjectsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.ObjectResponse"
                        }
                    }
                }
            },
            "developer.ListRecordsRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/developer.AttributesParam"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/developer.SortParam"
                    }
                }
            },
            "developer.ListRecordsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.RecordResponse"
                        }
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "developer.ObjectResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.AttributeDefinitionResponse"
                        }
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_plural": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "developer.RecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "developer.SelectOptionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "developer.SortParam": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "description": "attribute slug or ID",
                        "type": "string"
                    },
                    "direction": {
                        "description": "\"asc\" or \"desc\"",
                        "type": "string"
                    }
                }
            },
            "developer.UpdateListRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Attributes to update",
                        "type": "object",
                        "additionalProperties": {}
                    }
                }
            },
            "developer.UpdateListRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "developer.UpdateRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Attributes to update",
                        "type": "object",
                        "additionalProperties": {}
                    }
                }
            },
            "developer.UpdateRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "developer.UpsertRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "matching_attribute": {
                        "description": "ID or slug of the attribute to match on",
                        "type": "string"
                    }
                }
            },
            "developer.UpsertRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                }
            },
            "httpx.APIError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}