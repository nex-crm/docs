{
    "openapi": "3.0.0",
    "info": {
        "description": "REST API for accessing and managing CRM data. Generate API keys from the Nex web UI and use them to authenticate requests.",
        "title": "Nex Developer API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/lists/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add record to a list or update its list-specific attributes if it already exists",
                "tags": [
                    "Lists"
                ],
                "summary": "Upsert a list member",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateListMemberRequest"
                            }
                        }
                    },
                    "description": "List member upsert request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created or updated list member",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateListMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add record to a list",
                "tags": [
                    "Lists"
                ],
                "summary": "Add a list member",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateListMemberRequest"
                            }
                        }
                    },
                    "description": "List member creation request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created list member",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateListMemberResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lists/{id}/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all records that belong to a specific list with pagination",
                "tags": [
                    "Lists"
                ],
                "summary": "Get records from a specific list",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.ListRecordsRequest"
                            }
                        }
                    },
                    "description": "List records request with pagination options",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "List of records with pagination info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListRecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lists/{id}/records/{record_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates list-specific attributes for a record that belongs to a list",
                "tags": [
                    "Lists"
                ],
                "summary": "Update a record within a list",
                "parameters": [
                    {
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpdateListRecordRequest"
                            }
                        }
                    },
                    "description": "List record update request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated list record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpdateListRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "List or record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/objects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all entity definitions (objects) available in the workspace",
                "tags": [
                    "Objects"
                ],
                "summary": "List all objects in the workspace",
                "parameters": [
                    {
                        "description": "Include attribute definitions for each object",
                        "name": "include_attributes",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/objects/{slug}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record or updates an existing one based on a matching attribute",
                "tags": [
                    "Records"
                ],
                "summary": "Create or update a record",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpsertRecordRequest"
                            }
                        }
                    },
                    "description": "Upsert record request with matching attribute and data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created or updated record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpsertRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new record for a specific object type with the provided attributes",
                "tags": [
                    "Records"
                ],
                "summary": "Create a new record",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.CreateRecordRequest"
                            }
                        }
                    },
                    "description": "Record attributes",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.CreateRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/objects/{slug}/lists": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all lists associated with a specific object type",
                "tags": [
                    "Lists"
                ],
                "summary": "List all lists for a specific object",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Include attribute definitions for each list",
                        "name": "include_attributes",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lists for the object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListObjectsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/objects/{slug}/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves records (entities) for a specific object type with pagination and optional filtering",
                "tags": [
                    "Records"
                ],
                "summary": "List records for a specific object type",
                "parameters": [
                    {
                        "description": "Object slug (e.g., 'person', 'company')",
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.ListRecordsRequest"
                            }
                        }
                    },
                    "description": "List records request with pagination and filtering options",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "List of records with pagination info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.ListRecordsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/records/{record_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a single record with all its attributes",
                "tags": [
                    "Records"
                ],
                "summary": "Get a specific record by ID",
                "parameters": [
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record details with attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.RecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid record ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates specific attributes of an existing record",
                "tags": [
                    "Records"
                ],
                "summary": "Update an existing record",
                "parameters": [
                    {
                        "description": "Record ID",
                        "name": "record_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.UpdateRecordRequest"
                            }
                        }
                    },
                    "description": "Attributes to update",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated record with all attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.UpdateRecordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/context/text": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add arbitrary context through unstructured text. This endpoint allows you to provide contextual information about (new or existing) people or companies.",
                "tags": [
                    "Context"
                ],
                "summary": "Add context",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.AddContextTextRequest"
                            }
                        }
                    },
                    "description": "Context text to add",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Context successfully added"
                    },
                    "400": {
                        "description": "Bad request - Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/context/ask": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Query information about a specific entity using natural language. This endpoint allows you to ask questions about people, companies, or any other entities in your CRM.",
                "tags": [
                    "Context"
                ],
                "summary": "Query context",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/developer.QueryContextRequest"
                            }
                        }
                    },
                    "description": "Query to ask about entities",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Query response with relevant information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/developer.QueryContextResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/httpx.APIError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://app.nex.ai/api/developers"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "description": "API key for authentication (format: \"Bearer YOUR_API_KEY\")",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "developer.AttributeDefinitionResponse": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/components/schemas/developer.AttributeOptionsResponse"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "developer.AttributeOptionsResponse": {
                "type": "object",
                "properties": {
                    "is_multi_value": {
                        "type": "boolean"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "is_unique": {
                        "type": "boolean"
                    },
                    "is_whole_number": {
                        "type": "boolean"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.SelectOptionResponse"
                        }
                    },
                    "use_raw_format": {
                        "type": "boolean"
                    }
                }
            },
            "developer.AttributesParam": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": [
                            "all",
                            "primary",
                            "none"
                        ],
                        "description": "Simple string values for common attribute sets"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "custom"
                                ],
                                "description": "Must be 'custom' when using object format"
                            },
                            "slugs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Array of attribute slugs to include",
                                "minItems": 1
                            }
                        },
                        "required": [
                            "mode",
                            "slugs"
                        ],
                        "description": "Object format for custom attribute selection"
                    }
                ],
                "description": "Attributes parameter supports both string values ('all', 'primary', 'none') and object format for custom selection"
            },
            "developer.CreateListMemberRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Optional list-specific attributes",
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "parent_id": {
                        "description": "ID of the existing record to add to the list",
                        "type": "string"
                    }
                },
                "example": {
                    "parent_id": "32417546405832961",
                    "attributes": {
                        "source": "website",
                        "status": "new",
                        "score": 85,
                        "notes": "Qualified lead from demo request"
                    }
                }
            },
            "developer.CreateListMemberResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32417546405832962",
                    "object_id": "32417546405832950",
                    "type": "person",
                    "workspace_id": "32417546405832945",
                    "created_at": "2024-01-20T16:45:00Z",
                    "updated_at": "2024-01-20T16:45:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "Sarah",
                            "last_name": "Chen"
                        },
                        "email_addresses": [
                            "sarah@newstartup.com"
                        ],
                        "job_title": "VP Engineering",
                        "source": "website",
                        "status": "new",
                        "score": 85,
                        "notes": "Qualified lead from demo request"
                    }
                }
            },
            "developer.CreateRecordRequest": {
                "type": "object",
                "required": [
                    "attributes"
                ],
                "properties": {
                    "attributes": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "description": "Can be a string (e.g., 'John Doe') or an object (e.g., {'first_name': 'John', 'last_name': 'Doe'} for Person objects).",
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": {}
                                    }
                                ]
                            }
                        },
                        "additionalProperties": {}
                    }
                },
                "example": {
                    "attributes": {
                        "name": {
                            "first_name": "John",
                            "last_name": "Doe"
                        },
                        "name (alternative)": "John Doe",
                        "email_addresses": [
                            "john@example.com"
                        ],
                        "phone_number": {
                            "country_code": 1,
                            "number": "5551234567"
                        },
                        "job_title": "Software Engineer",
                        "location": {
                            "street": "123 Main St",
                            "city": "Boston",
                            "region": "MA",
                            "postal_code": "02134",
                            "country": "US"
                        }
                    }
                }
            },
            "developer.CreateRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32710180831586561",
                    "object_id": "32710180831586560",
                    "type": "person",
                    "workspace_id": "32710180831586559",
                    "created_at": "2024-01-15T10:30:00Z",
                    "updated_at": "2024-01-15T10:30:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "John",
                            "last_name": "Doe"
                        },
                        "email_addresses": [
                            "john@example.com"
                        ],
                        "phone_number": {
                            "country_code": 1,
                            "number": "5551234567"
                        },
                        "job_title": "Software Engineer",
                        "location": {
                            "street": "123 Main St",
                            "city": "Boston",
                            "region": "MA",
                            "postal_code": "02134",
                            "country": "US"
                        }
                    }
                }
            },
            "developer.ListObjectsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.ObjectResponse"
                        }
                    }
                },
                "example": {
                    "data": [
                        {
                            "id": "123",
                            "slug": "person",
                            "name": "Person",
                            "name_plural": "People",
                            "type": "person",
                            "description": "",
                            "created_at": "2024-01-01T00:00:00Z",
                            "attributes": [
                                {
                                    "id": "456",
                                    "slug": "name",
                                    "type": "full_name",
                                    "name": "Name",
                                    "description": "",
                                    "options": {
                                        "is_multi_value": false,
                                        "is_required": true,
                                        "is_unique": false
                                    }
                                },
                                {
                                    "id": "789",
                                    "slug": "email_addresses",
                                    "type": "email",
                                    "name": "Email Addresses",
                                    "description": "",
                                    "options": {
                                        "is_multi_value": true,
                                        "is_required": false,
                                        "is_unique": true
                                    }
                                }
                            ]
                        },
                        {
                            "id": "456",
                            "slug": "company",
                            "name": "Company",
                            "name_plural": "Companies",
                            "type": "company",
                            "description": "",
                            "created_at": "2024-01-01T00:00:00Z",
                            "attributes": [
                                {
                                    "id": "987",
                                    "slug": "name",
                                    "type": "text",
                                    "name": "Name",
                                    "description": "",
                                    "options": {
                                        "is_multi_value": false,
                                        "is_required": true,
                                        "is_unique": false
                                    }
                                },
                                {
                                    "id": "654",
                                    "slug": "domains",
                                    "type": "domain",
                                    "name": "Domains",
                                    "description": "",
                                    "options": {
                                        "is_multi_value": true,
                                        "is_required": false,
                                        "is_unique": true
                                    }
                                },
                                {
                                    "id": "321",
                                    "slug": "industries",
                                    "type": "select",
                                    "name": "Industries",
                                    "description": "",
                                    "options": {
                                        "is_multi_value": true,
                                        "is_required": false,
                                        "is_unique": false,
                                        "select_options": [
                                            {
                                                "id": "tech",
                                                "name": "Technology"
                                            },
                                            {
                                                "id": "finance",
                                                "name": "Financial Services"
                                            },
                                            {
                                                "id": "healthcare",
                                                "name": "Healthcare"
                                            },
                                            {
                                                "id": "retail",
                                                "name": "Retail"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "developer.ListRecordsRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/developer.AttributesParam"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/developer.SortParam"
                    }
                },
                "example": {
                    "attributes": "all",
                    "limit": 50,
                    "offset": 0,
                    "sort": {
                        "attribute": "name",
                        "direction": "asc"
                    }
                }
            },
            "developer.ListRecordsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.RecordResponse"
                        }
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "example": {
                    "data": [
                        {
                            "id": "32414268188027655",
                            "object_id": "32414268188027650",
                            "type": "person",
                            "workspace_id": "32414268188027645",
                            "created_at": "2024-01-15T14:20:00Z",
                            "updated_at": "2024-01-20T09:15:00Z",
                            "attributes": {
                                "name": {
                                    "first_name": "Alice",
                                    "last_name": "Johnson"
                                },
                                "email_addresses": [
                                    "alice@techcorp.com"
                                ],
                                "job_title": "Product Manager",
                                "phone_number": {
                                    "country_code": 1,
                                    "number": "5551112222"
                                }
                            }
                        },
                        {
                            "id": "32414268188027656",
                            "object_id": "32414268188027650",
                            "type": "person",
                            "workspace_id": "32414268188027645",
                            "created_at": "2024-01-16T08:30:00Z",
                            "updated_at": "2024-01-16T08:30:00Z",
                            "attributes": {
                                "name": {
                                    "first_name": "Bob",
                                    "last_name": "Wilson"
                                },
                                "email_addresses": [
                                    "bob@startup.io"
                                ],
                                "job_title": "Founder",
                                "location": {
                                    "city": "San Francisco",
                                    "region": "CA",
                                    "country": "US"
                                }
                            }
                        }
                    ],
                    "limit": 50,
                    "offset": 0,
                    "total": 247
                }
            },
            "developer.ObjectResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/developer.AttributeDefinitionResponse"
                        }
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_plural": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "developer.RecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32414268188027655",
                    "object_id": "32414268188027650",
                    "type": "person",
                    "workspace_id": "32414268188027645",
                    "created_at": "2024-01-15T14:20:00Z",
                    "updated_at": "2024-01-20T09:15:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "Alice",
                            "last_name": "Johnson"
                        },
                        "email_addresses": [
                            "alice@techcorp.com"
                        ],
                        "job_title": "Product Manager",
                        "phone_number": {
                            "country_code": 1,
                            "number": "5551112222"
                        },
                        "location": {
                            "street": "456 Innovation Dr",
                            "city": "Austin",
                            "region": "TX",
                            "postal_code": "73301",
                            "country": "US"
                        },
                        "linkedin": {
                            "username": "alicejohnson",
                            "url": "https://linkedin.com/in/alicejohnson"
                        }
                    }
                }
            },
            "developer.SelectOptionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "developer.SortParam": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "description": "attribute slug or ID",
                        "type": "string"
                    },
                    "direction": {
                        "description": "\"asc\" or \"desc\"",
                        "type": "string"
                    }
                }
            },
            "developer.UpdateListRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Attributes to update",
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "example": {
                    "attributes": {
                        "status": "qualified",
                        "score": 92,
                        "notes": "Had a great demo call, ready to move forward",
                        "source": "referral"
                    }
                }
            },
            "developer.UpdateListRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32417546405832962",
                    "object_id": "32417546405832950",
                    "type": "person",
                    "workspace_id": "32417546405832945",
                    "created_at": "2024-01-20T16:45:00Z",
                    "updated_at": "2024-01-21T10:30:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "Sarah",
                            "last_name": "Chen"
                        },
                        "email_addresses": [
                            "sarah@newstartup.com"
                        ],
                        "job_title": "VP Engineering",
                        "status": "qualified",
                        "score": 92,
                        "notes": "Had a great demo call, ready to move forward",
                        "source": "referral"
                    }
                }
            },
            "developer.UpdateRecordRequest": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Attributes to update",
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "example": {
                    "attributes": {
                        "job_title": "Senior Engineer",
                        "location": {
                            "city": "Boston",
                            "region": "MA",
                            "country": "US"
                        },
                        "phone_number": {
                            "country_code": 1,
                            "number": "5551234567"
                        }
                    }
                }
            },
            "developer.UpdateRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32414268188027655",
                    "object_id": "32414268188027650",
                    "type": "person",
                    "workspace_id": "32414268188027645",
                    "created_at": "2024-01-15T14:20:00Z",
                    "updated_at": "2024-01-21T11:45:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "John",
                            "last_name": "Doe"
                        },
                        "email_addresses": [
                            "john@example.com"
                        ],
                        "job_title": "Senior Engineer",
                        "phone_number": {
                            "country_code": 1,
                            "number": "5551234567"
                        },
                        "location": {
                            "city": "Boston",
                            "region": "MA",
                            "country": "US"
                        }
                    }
                }
            },
            "developer.UpsertRecordRequest": {
                "type": "object",
                "required": [
                    "attributes",
                    "matching_attribute"
                ],
                "properties": {
                    "attributes": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "description": "Required when creating a new record, but optional when updating an existing record that already has a name. Can be a string (e.g., 'John Doe') or an object (e.g., {'first_name': 'John', 'last_name': 'Doe'} for Person objects).",
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": {}
                                    }
                                ]
                            }
                        },
                        "additionalProperties": {}
                    },
                    "matching_attribute": {
                        "description": "ID or slug of the attribute to match on",
                        "type": "string"
                    }
                },
                "example": {
                    "matching_attribute": "email_addresses",
                    "attributes": {
                        "name": {
                            "first_name": "Jane",
                            "last_name": "Smith"
                        },
                        "email_addresses": [
                            "jane@example.com"
                        ],
                        "job_title": "CTO",
                        "phone_number": {
                            "country_code": 1,
                            "number": "5559876543"
                        }
                    }
                }
            },
            "developer.UpsertRecordResponse": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "workspace_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "32414268188027657",
                    "object_id": "32414268188027650",
                    "type": "person",
                    "workspace_id": "32414268188027645",
                    "created_at": "2024-01-21T12:00:00Z",
                    "updated_at": "2024-01-21T12:00:00Z",
                    "attributes": {
                        "name": {
                            "first_name": "Jane",
                            "last_name": "Smith"
                        },
                        "email_addresses": [
                            "jane@example.com"
                        ],
                        "job_title": "CTO",
                        "phone_number": {
                            "country_code": 1,
                            "number": "5559876543"
                        },
                        "location": {
                            "city": "San Francisco",
                            "region": "CA",
                            "country": "US"
                        }
                    }
                }
            },
            "httpx.APIError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "developer.AddContextTextRequest": {
                "type": "object",
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The unstructured text containing context information about people, companies, or other entities"
                    },
                    "context": {
                        "type": "string",
                        "description": "Optional additional context about the content (e.g., source, type of activity)"
                    }
                },
                "example": {
                    "content": "Marcus Rodriguez commented: \"Would love to book a demo\"",
                    "context": "New LinkedIn activity"
                }
            },
            "developer.QueryContextRequest": {
                "type": "object",
                "required": [
                    "query"
                ],
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Natural language query about entities or information"
                    }
                },
                "example": {
                    "query": "What's the status with techflow.io?"
                }
            },
            "developer.QueryContextResponse": {
                "type": "object",
                "properties": {
                    "answer": {
                        "type": "string",
                        "description": "Response to the query based on available context"
                    }
                },
                "example": {
                    "answer": "Based on the available context, techflow.io appears to be a technology company. Marcus Rodriguez from techflow.io expressed interest in booking a demo on LinkedIn."
                }
            }
        }
    }
}